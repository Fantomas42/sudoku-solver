#!/usr/bin/python
import sys
from time import time
from optparse import OptionParser

from sudokulib.solver import SudokuSolver

if __name__ == '__main__':
    parser = OptionParser(usage='usage: %prog [options] source')
    parser.add_option('--nopreprocessing', action='store_false',
                      dest='preprocessing', default=True,
                      help='Do not use preprocessing for finding solution')
    parser.add_option('-f', '--free', dest='free_char', type='string',
                      help='The character signaling free place', default='.')
    (options, args) = parser.parse_args()

    if not len(args):
        print 'No source file provided'
        sys.exit(1)

    source = args[0]

    start_time = time()

    if options.preprocessing:
        solver = SudokuSolver(source, verbosity=0,
                              free_char=options.free_char,
                              solvers=[], backtracking=True)
    else:
        solver = SudokuSolver(source, verbosity=0,
                              free_char=options.free_char,
                              solvers=[], preprocessors=[],
                              backtracking=True)

    print '%s items missing' % solver.grid.missing

    solver.run()

    print solver
    print 'in %s seconds' % (time() - start_time)
    print '%s items missing' % solver.grid.missing
